# This file is a template, and might need editing before it works on your project.
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Getting-Started.gitlab-ci.yml

# This is a sample GitLab CI/CD configuration file that should run without any modifications.
# It demonstrates a basic 3 stage CI/CD pipeline. Instead of real tests or scripts,
# it uses echo commands to simulate the pipeline execution.
#
# A pipeline is composed of independent jobs that run scripts, grouped into stages.
# Stages run in sequential order, but jobs within stages run in parallel.
#
# For more information, see: https://docs.gitlab.com/ee/ci/yaml/index.html#stages

stages:          # List of stages for jobs, and their order of execution
  - test
  - build
  - deploy

complete-test-job:   # This job also runs in the test stage.
  stage: test    # It can run at the same time as unit-test-job (in parallel).
  script:
    - go test -v ./...
    - mkdir /root/.ssh

build-job:       # This job runs in the build stage, which runs first.
  stage: build
  script:
    - go build -v ./...

deploy-job:      # This job runs in the deploy stage.
  stage: deploy  # It only runs when *both* jobs in the test stage complete successfully.
  script:
    - go build -o pas main.go
    - wget http://senketsu.i.gckopper.xyz:3443/cred/gitlab
    - mkdir /root/.ssh
    - wget --output-document=/root/.ssh/known_hosts http://senketsu.i.gckopper.xyz:3443/cred/known_hosts
    - curl http://senketsu.i.gckopper.xyz:3443/kill -vvv
    - scp -i gitlab -p 8444 pas gckopper@senketsu.i.gckopper.xyz:/home/gckopper/pas/server
    - curl http://senketsu.i.gckopper.xyz:3443/start -vvv

